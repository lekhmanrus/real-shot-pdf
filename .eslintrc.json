{
  "root": true,
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "settings": {
        "import/parsers": {
          "@typescript-eslint/parser": [ ".ts" ]
        },
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true,
            "project": "."
          }
        }
      },
      "parserOptions": {
        "project": [
          "tsconfig.json",
          "angular/tsconfig.app.json"
        ],
        "createDefaultProgram": true
      },
      "plugins": [
        "@angular-eslint",
        "@typescript-eslint",
        "import",
        "jsdoc",
        "prefer-arrow",
        "rxjs",
        "unicorn"
      ],
      "extends": [
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:jsdoc/recommended",
        "plugin:rxjs/recommended",
        "plugin:import/errors"
      ],
      "rules": {
        "@angular-eslint/component-class-suffix": [
          "error",
          {
            "suffixes": [ "Component" ]
          }
        ],
        "@angular-eslint/no-forward-ref": "error",
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array-simple"
          }
        ],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/explicit-member-accessibility": [
          "off",
          {
            "accessibility": "explicit"
          }
        ],
        "@typescript-eslint/member-ordering": [
          0,
           [
            // Index signature
            "signature",

            // Fields
            "public-static-field",
            "public-decorated-field",
            "public-instance-field",
            "public-abstract-field",
            "protected-static-field",
            "protected-decorated-field",
            "protected-instance-field",
            "protected-abstract-field",
            "private-static-field",
            "private-decorated-field",
            "private-instance-field",
            "private-abstract-field",

            // Constructors
            "public-constructor",
            "protected-constructor",
            "private-constructor",

            // Methods
            "public-static-method",
            "public-decorated-method",
            "public-instance-method",
            "public-abstract-method",
            "protected-static-method",
            "protected-decorated-method",
            "protected-instance-method",
            "protected-abstract-method",
            "private-static-method",
            "private-decorated-method",
            "private-instance-method",
            "private-abstract-method"
           ]
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "variable",
            "types": [ "boolean" ],
            "format": [ "PascalCase" ],
            "prefix": [ "is", "are", "should", "has", "can", "did", "will" ]
          },
          {
            "selector": "enumMember",
            "format": [ "PascalCase" ]
          }
        ],
        "jsdoc/newline-after-description": 0,
        "jsdoc/require-param-type": 0,
        "jsdoc/require-property-type": 0,
        "jsdoc/require-returns-type": 0,
        "jsdoc/require-returns": [
          "error",
          { "checkGetters": false }
        ],
        "prefer-arrow/prefer-arrow-functions": [
          "warn",
          {
            "disallowPrototype": true,
            "singleReturnOnly": false,
            "classPropertiesAllowed": false
          }
        ],
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/quotes": [
          "error",
          "single",
          {
            "avoidEscape": true,
            "allowTemplateLiterals": true
          }
        ],
        "brace-style": [
          "error",
          "1tbs"
        ],
        "comma-dangle": "error",
        "import/order": "off",
        "max-classes-per-file": [
          "error",
          1
        ],
        "max-len": [
          "error",
          {
            "code": 100
          }
        ],
        "no-redeclare": "error",
        "no-underscore-dangle": "off",
        "quote-props": [ "error", "consistent-as-needed" ],
        "no-duplicate-imports": "error",
        "no-irregular-whitespace": "error",
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 2
          }
        ],
        "prefer-template": "error",
        "rxjs/no-internal": "error",
        "unicorn/filename-case": "error",
        "import/no-deprecated": "off",
        "import/no-unresolved": "warn"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": { }
    },
    {
      "files": [
        "**/**/components/modals/**/**/*.ts"
      ],
      "rules": {
        "@angular-eslint/component-class-suffix": [
          "error",
          {
            "suffixes": [ "ModalComponent" ]
          }
        ]
      }
    },
    {
      "files": [
        "**/**/components/pages/**/**/*.ts"
      ],
      "rules": {
        "@angular-eslint/component-class-suffix": [
          "error",
          {
            "suffixes": [ "PageComponent" ]
          }
        ]
      }
    }
  ]
}
